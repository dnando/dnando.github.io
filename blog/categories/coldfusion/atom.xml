<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Coldfusion | Nando @ Aria Media]]></title>
  <link href="http://dnando.github.io/blog/categories/coldfusion/atom.xml" rel="self"/>
  <link href="http://dnando.github.io/"/>
  <updated>2014-11-04T16:39:44+01:00</updated>
  <id>http://dnando.github.io/</id>
  <author>
    <name><![CDATA[Nando @ Aria Media]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SSH Tunnelling - ColdFusion Lockdown Technique]]></title>
    <link href="http://dnando.github.io/blog/2014/11/04/ssh-tunnelling-coldfusion-lockdown-technique/"/>
    <updated>2014-11-04T14:40:42+01:00</updated>
    <id>http://dnando.github.io/blog/2014/11/04/ssh-tunnelling-coldfusion-lockdown-technique</id>
    <content type="html"><![CDATA[<p>The ColdFusion and Railo Lockdown Guides recommend that access is restricted to all administrative areas of the server. This is especially important to do because many security vulnerabilities have been discovered that exploit open access to admin directories. It is fairly easy to accomplish, using a directive in the Apache configuration for example. It would look something like this on ACF:</p>

<pre><code>&lt;Location /CFIDE&gt;
    Order Deny,Allow
    Deny from All
&lt;/Location&gt;
</code></pre>

<p>or this on Railo:</p>

<pre><code>&lt;Location /railo-context&gt;
    Order Deny,Allow
    Deny from all
&lt;/Location&gt;
</code></pre>

<p>So far so good, but now anyone needing to administer the server can&rsquo;t login. They will be denied access by the web server. There are various recommendations for allowing only selective access, for instance from a given fixed IP address at the office of the administrator:</p>

<pre><code>&lt;Location /railo-context&gt;
    Order Deny,Allow
    Deny from all
    Allow from 84.16.156.99
&lt;/Location&gt;
</code></pre>

<p>But what if the server administrator(s) is/are out of the office when they need access to the server? Away at a conference, at a client&rsquo;s office, or at home? And what if your office doesn&rsquo;t have a fixed IP address? Should you get one &hellip; and then have to remember to change the &ldquo;allow from&rdquo; IP address in all of your server configuration files if and when that IP address changes? For a variety of reasons, this doesn&rsquo;t seem ideal.</p>

<p>There&rsquo;s another &ldquo;small&rdquo; problem here. Best security practice dictates that all access to admin areas should be over an encrypted connection. I cannot ensure that the modem installed here in my office, or wherever else I happen to be when needing to admin my servers, a hotel for instance, is not compromised by a packet sniffer. In fact, I recently installed an update on our modem here specifically for a packet sniffing vulnerability, and I only ran across it by chance. No idea how long that remained unpatched, and I&rsquo;m simply not prepared to invest the time to learn how to monitor this sort of thing. This implies that I <em>definitely should</em> install SSL certificates and set up secure https access for all administrative areas on each server I maintain. That&rsquo;s painful.</p>

<p>Put all that together, and it helps to explain why ACF and Railo servers are often not locked down.</p>

<p>Here&rsquo;s where SSH tunnelling comes to the rescue. In a nutshell, it allows you to securely browse a remote server as localhost, as if the server was under your desk and your keyboard and monitor where connected to it, even if it&rsquo;s located halfway around the world. The icing on the cake is it is very simple to set up, and the same setup will work for every server you admin!</p>

<p>To use SSH tunneling to gain access to admin areas of your server, the first step to restrict access to any admin area to only localhost, for example:</p>

<p>For ACF:</p>

<pre><code>&lt;Location /CFIDE&gt;
    Order Deny,Allow
    Deny from All
    Allow from localhost
&lt;/Location&gt;
</code></pre>

<p>or for Railo:</p>

<pre><code>&lt;Location /railo-context&gt;
    Order Deny,Allow
    Deny from all
    Allow from localhost
&lt;/Location&gt;
</code></pre>

<p>( While you are at it, restrict port access to only those ports you need to leave exposed, for instance 80, 443 and whatever port you are using for SSH access ).</p>

<p>There are detailed instructions for SSH tunnelling all over the web if you want to find out more, but the instructions below should work fine for our purposes.</p>

<p>1) In your web browser, configure the proxy settings to point to &ldquo;localhost&rdquo;, a free port on your local machine (we&rsquo;ll use 60001), using SOCKS5. This should work with any browser. Using Firefox as an example, here&rsquo;s how to do that:</p>

<ul>
<li>Go to Preferences</li>
<li>Click the Advanced icon</li>
<li>Click the Network tab</li>
<li>Click the Settings button, across from where it says &ldquo;Configure how Firefox connects to the Internet</li>
<li>Select Manual proxy configuration</li>
<li>In the SOCKS Host field put &ldquo;localhost&rdquo; without the quotation marks</li>
<li>In the Port field put the port number you will use, 60001 in our example</li>
<li>Select SOCKS v5</li>
<li>Click OK</li>
</ul>


<p>2) ssh into any server you admin using Terminal or Putty, etc.  Use the -D flag set to the same port as above, example: ssh -D 60001 <a href="&#x6d;&#x61;&#x69;&#x6c;&#x74;&#x6f;&#58;&#117;&#115;&#x65;&#x72;&#x40;&#49;&#48;&#x32;&#46;&#x31;&#48;&#51;&#46;&#x31;&#x30;&#x38;&#46;&#x33;&#x39;">&#x75;&#x73;&#101;&#114;&#64;&#x31;&#48;&#50;&#46;&#x31;&#x30;&#x33;&#x2e;&#x31;&#48;&#56;&#46;&#x33;&#57;</a></p>

<p>3) You can now access admin areas of the server in this browser using localhost urls such as <a href="http://127.0.0.1/CFIDE/administrator/enter.cfm,">http://127.0.0.1/CFIDE/administrator/enter.cfm,</a> as long as you remain logged in via SSH. The connection is through an SSH &ldquo;tunnel&rdquo;, so between your local machine and the server, all traffic is encypted.</p>

<p>Note that the port chosen is arbitrary. It only has to be available and match in both the -D flag and SOCKS port setting. To revert the browser to normal behavior, simply choose No Proxy in the Network Settings dialog.</p>

<p>What I usually do is leave Firefox configured in this way and reserve it only for SSH tunnelling sessions. And again, once a browser is configured with these proxy settings, you can securely browse any server as localhost by SSH&#8217;ing into it with the -D port setting.</p>

<p>Now say you have Fusion Reactor installed and want to ensure access is also restricted. Just leave your firewall configured to leave the ports Fusion Reactor uses closed, and access it, securely, via your SSH tunnel!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Is This Acceptable?]]></title>
    <link href="http://dnando.github.io/blog/2014/10/17/is-this-acceptable/"/>
    <updated>2014-10-17T14:09:18+02:00</updated>
    <id>http://dnando.github.io/blog/2014/10/17/is-this-acceptable</id>
    <content type="html"><![CDATA[<p>A few days ago, Adobe released <a href="http://blogs.coldfusion.com/post.cfm/updates-for-coldfusion-11-coldfusion-10-and-coldfusion-9-released">updates</a> for CF 9, 10 and 11. I&rsquo;ve been following comments raised about them since, and I&rsquo;m disturbed to see some developers struggling to get their servers patched, especially when applying the update has taken the server down. I don&rsquo;t know if these cases are isolated or might be more widespread, but I find this unacceptable.</p>

<p>I run several instances of ACF on CentOS. I&rsquo;m subscribed to the CentOS-announce Digest mailing list, as I&rsquo;m sure most CentOS server admins are. For many years now, whenever an update is released, perhaps once or twice a week, I ssh directly onto our servers, run yum update, and generally within less than a minute, the update completes. Never once has the process failed. Never once have I seen an incoming email on the CentOS mailing list that someone experienced a server crash, or any other issue for that matter, because of an update.</p>

<p>This is how ColdFusion updates <strong>should</strong> function, flawlessly.</p>

<p>In stark contrast, CF developers have become wary of applying updates. There is a risk that their server will compromised because of the security vulnerability the update is meant to patch, and there seems to be an equal if not greater risk that their server will be compromised, in one way or another, in the update process. CF 10 introduced automated updates, but as we see, the automated update process remains error prone.</p>

<p>It should not be like this. Rather than focusing on new features, the CF dev team needs to focus on getting the update process as flawless as it is on CentOS. What they seem to have lost track of is that, for a start, developers have families to support. Our clients expect us to keep their servers up and running 24/7. Our clients depend on the applications we build to run their businesses. As developers, we <em>cannot</em> afford to experiment on our clients. And yet, when Adobe releases a flawed update that takes servers down, effectively experimenting on us and our clients, <em>oh, look, they are trapped between a security vulerability and a flawed update</em>, the implicit statement received on our end is &ldquo;We don&rsquo;t care if you keep your clients. It does not matter to us at all.&rdquo; Really?</p>

<p>What is even more disturbing is the way the Adobe dev team now uses us as their QA department, as if ColdFusion server was loosely organized open source project among wannabe hackers. It is not disturbing because the CF devs are actively reaching out trying to solve problems that are occurring, asking for logs, error message screenshots, suggesting the possible need to copy and paste jar files from here to there if some functionality is broken, instructing us to manually install the updates one at a time if the automated updater doesn&rsquo;t work, etc. It is because these interchanges should never occur in the first place regarding an update. The update process needs to be flawless, as near to it as possible, so that we can rely on it. Like it is on CentOS. If they can do it, the CF dev team can do it.</p>

<p>The worst, however, is <a href="http://blogs.coldfusion.com/post.cfm/updates-for-coldfusion-11-coldfusion-10-and-coldfusion-9-released#comment-2A6D270F-CEF1-319F-EDCFF7262E950FC0">this</a>, linked for reference but replicated below, an Adobe engineer asking a developer, a paying customer, to effectively crash his server &ldquo;in off peak hours&rdquo; so that he can get at the log files that might reveal what the problem is.</p>

<p><blockquote><p></p></p><p><p>Hi Mark,</p></p><p><p>Of all the things connector logs with debug_level=debug are the most important one&rsquo;s. Till now with all the information you have shared I can tell that there is some problem with shared memory access between worker threads. But to exactly pin point the problem I will be needing the connector logs. I understand it will be difficult for you to do something on production server but it is a must for this problem to be resolved.</p></p><p><p>If possible in off-peak hours, apply the update14 and reconfigure the connector. Once the connector is installed go to connector directory c:\coldfusion10\config\wsconfig\magicnumber\ and open isapi_redirect.properties in notepad.<br/>Edit the line &ldquo;log_level= info&rdquo; and change it to &ldquo;log_level= debug&rdquo; and save the changes. Restart IIS, hit any cfm page and wait for app pool to crash. Once it is crashed take a backup of isapi_redirect.log(created in connector directory) in some other directory like c:\connector_logs\ directory. After the backup you can revert back the changes.<br/>Lastly you have to share this backed up logs with us.</p></p><p><p>Thanks,<br/>Milan.</p></p><p><p></p></blockquote></p>

<p>When I say this is unacceptable, I mean that it is not acceptable for Adobe to use CF developers and their clients as their QA team, especially in that Milan says &ldquo;I understand it will be difficult for you to do something on production server but it is a <em>must</em> for this problem to be resolved.&rdquo; No, it is <strong>not</strong> a must to take down our servers, possibly endangering our client relationships, to fix your bugs.</p>

<p>Yes, this is very complex stuff. But in today&rsquo;s world, that simply means Adobe needs to employ a vastly improved QA strategy than the one they have in place today for ColdFusion releases, especially for the update process itself.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Documentation for CFScript]]></title>
    <link href="http://dnando.github.io/blog/2014/09/17/documentation-for-cfscript/"/>
    <updated>2014-09-17T12:18:16+02:00</updated>
    <id>http://dnando.github.io/blog/2014/09/17/documentation-for-cfscript</id>
    <content type="html"><![CDATA[<p>Adam Cameron posted an excellent resource yesterday that has been lacking until now, <a href="http://blog.adamcameron.me/2014/09/documentation-for-cfscript.html">Documentation for CFScript</a>. <del>A few minor areas could be enhanced, but it is, in all, quite comprehensive.</del> Update: He&rsquo;s moved the <a href="https://github.com/daccfml/cfscript/blob/master/cfscript.md">CFScript documentation</a> to GitHub, so we can all have a go at improving it. That said, it is still quite comprensive and very helpful indeed. Thanks Adam.</p>
]]></content>
  </entry>
  
</feed>
