<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Nando @ Aria Media]]></title>
  <link href="http://dnando.github.io/atom.xml" rel="self"/>
  <link href="http://dnando.github.io/"/>
  <updated>2014-12-02T22:50:44+01:00</updated>
  <id>http://dnando.github.io/</id>
  <author>
    <name><![CDATA[Nando @ Aria Media]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Exploring CentOS 7 Firewalld]]></title>
    <link href="http://dnando.github.io/blog/2014/12/02/exploring-centos-7-firewalld/"/>
    <updated>2014-12-02T10:41:04+01:00</updated>
    <id>http://dnando.github.io/blog/2014/12/02/exploring-centos-7-firewalld</id>
    <content type="html"><![CDATA[<p>New with CentOS 7 is firewalld, a replacement for iptables to manage the firewall. As with anything new, at first glance it seems confusing, but I&rsquo;m finding I prefer it over iptables.</p>

<p>The first thing to understand about firewalld is that it is has multiple layers. It comes with a predefined set of zones, namely block, dmz, drop, external, home, internal, public, trusted, and work. Each of those zones can be associated with a network device or one or more ip addresses. Essentially, zones define and demarcate the level of trust an admin has decided to place on the devices and traffic within a network.</p>

<p>firewalld also pre-defines a set of services that can be added or removed from a zone. Effectively, when a service is added to a zone, it opens a port and sets any other necessary parameters. Services are defined with XML. Here&rsquo;s what the http service looks like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="utf-8"?&gt;
</span><span class='line'>&lt;service&gt;
</span><span class='line'>  &lt;short&gt;WWW (HTTP)&lt;/short&gt;
</span><span class='line'>  &lt;description&gt;HTTP is the protocol used to serve Web pages. If you plan to make your Web server publicly available, enable this option. ... &lt;/description&gt;
</span><span class='line'>  &lt;port protocol="tcp" port="80"/&gt;
</span><span class='line'>&lt;/service&gt;</span></code></pre></td></tr></table></div></figure>


<p>So to open port 80 via the tcp protocol to server http requests, as an example, first a zone must be associated with the network device that will handle the traffic, and then the http service added to the zone. As an admin, you can define your own custom services, or customize existing services. Other techniques allow you to open a port directly on a zone, or define more complex rules for access.</p>

<p>To configure the firewall and check its status, a command line client is provided, firewall-cmd. It can be used to make both permanent and temporary config changes. The configuration for firewalld is stored in XML files in /usr/lib/firewalld/ ( the default settings, not to be modified! ) and /etc/firewalld/ ( for user configured settings, which have preference over those in the default location ). These files can be edited, backed up, or used as templates for other server installations.</p>

<p>Now that we have an overview, we can get to work. To check if firewalld is running:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>systemctl status firewalld</span></code></pre></td></tr></table></div></figure>


<p>If you see from the output that firewalld is not running, or you see that the loaded service is disabled, here are the commands needed:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>systemctl enable firewalld
</span><span class='line'>systemctl start firewalld</span></code></pre></td></tr></table></div></figure>


<p>If a service is enabled, it will start on system reboot. Hence it&rsquo;s particularly important to ensure firewalld is enabled on a production server.</p>

<p>Here&rsquo;s how to disable firewalld so it will not start at boot time, and shut it down:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>systemctl disable firewalld
</span><span class='line'>systemctl stop firewalld</span></code></pre></td></tr></table></div></figure>


<p>Now I want to configure the firewall. First, I check for the name of the ethernet interface so that I can refer to it to associate it with a zone:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmcli dev status</span></code></pre></td></tr></table></div></figure>


<p>Then I check which zone eno16777736 is currently assigned to:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --get-zone-of-interface=eno16777736</span></code></pre></td></tr></table></div></figure>


<p>The result is &ldquo;no zone&rdquo;, so the next step is to add the ethernet interface to the public zone, which is the zone I&rsquo;ve decided to use for http access to the server. It&rsquo;s important to add the &ndash;permanent flag to the command so it is retained permanently, across reboots:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=public --add-interface=eno16777736 --permanent</span></code></pre></td></tr></table></div></figure>


<p>Now I have to reload the firewall configuration for the changes to take effect:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --reload</span></code></pre></td></tr></table></div></figure>


<p>And then we can double check just to make sure the ethernet interface is now added to the public zone &hellip;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --get-zone-of-interface=eno16777736</span></code></pre></td></tr></table></div></figure>


<p>and the result is &ldquo;public&rdquo;, so that&rsquo;s now set up correctly.</p>

<p>Let&rsquo;s now check how the public zone is currently set up:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=public --list-all</span></code></pre></td></tr></table></div></figure>


<p>Here we see again that the ethernet interface is added to the public zone, and that it is both active and the default zone. By default after installing CentOS 7, we have the services dhcpv6-client and ssh added to this zone. Taking a quick look at the description for this service to see what it does by opening /usr/lib/firewalld/services/dhcpv6-client.xml, we see, &ldquo;This option allows a DHCP for IPv6 (DHCPv6) client to obtain addresses and other IPv6 settings from DHCPv6 server.&rdquo; We won&rsquo;t be using IPv6 addresses within our local network to access this machine, so I think it&rsquo;s safe to remove this service, although we may want to leave it in place on a production server:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=public --remove-service=dhcpv6-client --permanent</span></code></pre></td></tr></table></div></figure>


<p><strong>Reminder - remember to always add the permanent flag to these commands if you want changes to be persisted!</strong></p>

<p>Now we can add the services for http access to our public zone:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=public --add-service=http --permanent
</span><span class='line'>firewall-cmd --zone=public --add-service=https --permanent</span></code></pre></td></tr></table></div></figure>


<p>&hellip; reload the firewall &hellip;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --reload</span></code></pre></td></tr></table></div></figure>


<p>&hellip; and recheck the configuration, using list-services instead of list-all just to try it out:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=public --list-services</span></code></pre></td></tr></table></div></figure>


<p>and I see that we now have services http https ssh configured. Excellent. Let&rsquo;s test that in a web browser.</p>

<p>I&rsquo;ve installed nginx web server, but see using systemctl status nginx that it&rsquo;s not yet running or enabled, so first we run</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>systemctl start nginx
</span><span class='line'>systemctl enable nginx</span></code></pre></td></tr></table></div></figure>


<p>And then I go to 192.168.1.16 in a web browser and see <strong>Welcome to nginx!</strong> Good.</p>

<p>As a double check, let&rsquo;s remove the http service and see what happens.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=public --remove-service=http --permanent
</span><span class='line'>firewall-cmd --reload</span></code></pre></td></tr></table></div></figure>


<p>Reloading 192.168.1.16, I get a No data received message, so that&rsquo;s exactly what we should expect.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=public --add-service=http --permanent
</span><span class='line'>firewall-cmd --reload</span></code></pre></td></tr></table></div></figure>


<p>And adding the http service back to the public zone again allows the <strong>Welcome to nginx!</strong> page to be loaded in my browser. Perfect.</p>

<p>However, I still don&rsquo;t have access to the CF Admin panel at <a href="http://192.168.1.16:8500/CFIDE/administrator/index.cfm,">http://192.168.1.16:8500/CFIDE/administrator/index.cfm,</a> because that&rsquo;s over port 8500. On a production machine, I absolutely would not open port 8500 for this purpose. But since this server is on our local office network, let&rsquo;s see how we can do this.</p>

<p>The first option that comes to mind is to create a custom firewalld service specifically for this purpose. Documentation I&rsquo;ve read recommends using existing services as a template. Custom services go in /etc/firewalld/services/. First let&rsquo;s make a copy of the http service, calling it http8500, and place it in /etc/firewalld/services/:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cp /usr/lib/firewalld/services/http.xml /etc/firewalld/services/http8500.xml</span></code></pre></td></tr></table></div></figure>


<p>Then we edit /etc/firewalld/services/http8500.xml to use port 8500 instead of port 80. Here&rsquo;s what the modified file looks like:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;?xml version="1.0" encoding="utf-8"?&gt;
</span><span class='line'>&lt;service&gt;
</span><span class='line'>  &lt;short&gt;CF Admin Access&lt;/short&gt;
</span><span class='line'>  &lt;description&gt;For CF Admin access via port 8500.&lt;/description&gt;
</span><span class='line'>  &lt;port protocol="tcp" port="8500"/&gt;
</span><span class='line'>&lt;/service&gt;</span></code></pre></td></tr></table></div></figure>


<p>Then we add this service to the public zone and reload the firewall:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=public --add-service=http8500 --permanent
</span><span class='line'>firewall-cmd --reload</span></code></pre></td></tr></table></div></figure>


<p>And now <a href="http://192.168.1.16:8500/CFIDE/administrator/index.cfm">http://192.168.1.16:8500/CFIDE/administrator/index.cfm</a> works! Again, this is not how I&rsquo;d set up access to the CF administrator on a production machine, but it was an opportunity to experiment with creating custom services. What I like about this option is that I can enable or disable it, independently of the other services enabled. So if I decide I want to lock this server down, I can quickly remove the http8500 service and access the CF Administrator via <a href="http://dnando.github.io/blog/2014/11/04/ssh-tunneling-coldfusion-lockdown-technique/">SSH Tunnelling</a>.</p>

<p>What I usually do is move ssh access to an obscure port. I think we can easily accomplish this using a custom service, but before I do that, I want to take a look at how the localhost interface is set up within the firewall. Again, we use nmcli dev status to get the name of the localhost or loopback interface</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmcli dev status</span></code></pre></td></tr></table></div></figure>


<p>It&rsquo;s &ldquo;lo&rdquo;, so let&rsquo;s see if it&rsquo;s set to zone by default:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --get-zone-of-interface=lo</span></code></pre></td></tr></table></div></figure>


<p>Nope, the result I get is &ldquo;no zone&rdquo;. Let&rsquo;s also see if there are any services added to the trusted zone, which would be the most appropriate for localhost</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=trusted --list-all</span></code></pre></td></tr></table></div></figure>


<p>At this point, nothing is added to this zone, no interfaces, services, sources or ports, etc. And the network interface &ldquo;lo&rdquo; isn&rsquo;t associated with any zone.</p>

<p>Now what I want to see is how the server responds to localhost access with the firewall enabled. This <em>might</em> be important on a production server because I will use ssh tunneling to access any areas I will restrict from public access. So let&rsquo;s logout from the server and login again with the -D flag so that I can tunnel into the test server and test if I have access via localhost with the firewall setup as it is now:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>exit
</span><span class='line'>ssh -D 6100 root@192.168.1.16
</span><span class='line'>root@192.168.1.16's password:
</span></code></pre></td></tr></table></div></figure>


<p>I keep Firefox on my dev machine reserved and set up for ssh tunneling on port 6100, so I simply open Firefox and browse to <a href="http://localhost:8500/CFIDE/administrator/index.cfm,">http://localhost:8500/CFIDE/administrator/index.cfm,</a> and find I can access the CF11 admin page and login. Browsing to <a href="http://localhost/,">http://localhost/,</a> I see the Welcome to nginx! page. So at this point via localhost, I have access. ( Note for anyone without experience using ssh tunnelling,  when I use localhost on Firefox set up for ssh tunneling, logged to the CentOS server using the -D flag, I am browsing the CentOS server next to me, not my dev machine. See <a href="http://dnando.github.io/blog/2014/11/04/ssh-tunneling-coldfusion-lockdown-technique/">SSH Tunnelling</a> for details how to do this. )</p>

<p>Now what happens if I add the &ldquo;lo&rdquo; network interface to the trusted zone, where no access is currently set up?</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=trusted --add-interface=lo --permanent
</span><span class='line'>firewall-cmd --reload</span></code></pre></td></tr></table></div></figure>


<p>Adding the lo interface to the trusted zone with no services had no affect at all on tunnelled access to localhost. So it looks like the firewall doesn&rsquo;t interfere there. So to clean up, I will remove the lo interface from the trusted zone and call it a day.</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>firewall-cmd --zone=trusted --remove-interface=lo --permanent
</span><span class='line'>firewall-cmd --reload</span></code></pre></td></tr></table></div></figure>


<p>PS - for some reason, perhaps it is a bug, lo was not removed from the trusted zone according to firewall-cmd &ndash;zone=trusted &ndash;list-all unless and until I rebooted the server. The strange thing was that the config file was correctly altered, but somehow, firewalld didn&rsquo;t seem to pick up the change. I&rsquo;ll look into filing a bug report later this evening &hellip;</p>

<p>References:<br>
1 <a href="https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html">https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html</a><br>
2 <a href="http://www.certdepot.net/rhel7-get-started-firewalld/">http://www.certdepot.net/rhel7-get-started-firewalld/</a><br>
3 <a href="http://fedoraproject.org/wiki/FirewallD">http://fedoraproject.org/wiki/FirewallD</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setting Up a Local Testing Server on VMWare]]></title>
    <link href="http://dnando.github.io/blog/2014/12/01/setting-up-a-local-testing-server-on-vmware/"/>
    <updated>2014-12-01T15:55:49+01:00</updated>
    <id>http://dnando.github.io/blog/2014/12/01/setting-up-a-local-testing-server-on-vmware</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been thinking about how to best set up a local testing environment for some time. My production servers are all on CentOS. On the advice of another developer I met at CFCamp this year, I&rsquo;ve decided to use VMWare to set up a CentOS server on a virtual machine here in the office.</p>

<p>For ease of access, what I needed to set up was a static ip for each VM I need. It&rsquo;s not hard to do once you figure it out, but getting all the pieces in place took some hours of digging, trial and error. This post, while specific to VMWare and CentOS 7, is intended to help both my future self and anyone else set up networking quickly and easily.  You may need to adapt as necessary for your specific environment.</p>

<p>The obvious first step was to download the ISO image from a <a href="http://www.centos.org/download/mirrors/">CentOS mirror site</a>. I grabbed the minimal install as a nearest approximation to the production environment, and created a VM from it using VMWare on an unused Mac mini we had laying around the office.</p>

<p>On the minimal install, networking isn&rsquo;t enabled by default. So before I could proceed, I had to figure how to enable networking, and get it working via a static IP. Here&rsquo;s a summary of what finally worked for me.</p>

<p>1) Figure out what the ethernet device is named by running the command :</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nmcli dev status</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dnando.github.io/images/nmcli.gif" alt="nmcli dev status" /></p>

<p>As you can see, mine was named eno16777736</p>

<p>2) cd to the directory /etc/sysconfig/network-scripts and run ls to display its files</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>cd /etc/sysconfig/network-scripts
</span><span class='line'>ls</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dnando.github.io/images/networkScriptsLs.gif" alt="network-scripts ls" /></p>

<p>3) Look for the configuration file for your ethernet device, mine was named ifcfg-eno16777736 and open it for editing using vm or nano</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nano ifcfg-eno16777736</span></code></pre></td></tr></table></div></figure>


<p><img src="http://dnando.github.io/images/nano-ifcfg.gif" alt="network-scripts ls" /></p>

<p>The above screenshot was taken after it was edited. The lines to change or add are:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>BOOTPROTO=static
</span><span class='line'>IPADDR=&lt;the static ip address you want to assign to this instance&gt;
</span><span class='line'>NETMASK=255.255.255.0
</span><span class='line'>GATEWAY=&lt;the gateway ip address of your internal network&gt;
</span><span class='line'>NM_CONTROLLED=no
</span><span class='line'>ONBOOT=yes</span></code></pre></td></tr></table></div></figure>


<p>I found that adding the correct gateway ip was essential. NM_CONTROLLED specifies whether or not this device is controlled by the Network Manager. We are setting the parameters manually here, so this must be no. ONBOOT=yes specifies to connect this network device on boot.</p>

<p>Save the file, exit nano, and run the following command to restart the network:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>systemctl restart network</span></code></pre></td></tr></table></div></figure>


<p>Now CentOS 7 should be setup to network via the static local ip of your choice. But the connection isn&rsquo;t bridged outside of the VM. After some fiddling around, here&rsquo;s what worked for me. I went out to the VMWare interface, clicked on the double arrow icon to open the networking menu, and clicked Network Adapter Settings&hellip;</p>

<p><img src="http://dnando.github.io/images/vmWareNAS1.jpg" alt="VMWare Network menu" /></p>

<p>From the menu, I chose Autodetect, as shown below:</p>

<p><img src="http://dnando.github.io/images/vmWareNAS2.jpg" alt="VMWare Network menu" /></p>

<p>Once I had these configuration changes in place, I could access the CentOS instance via SSH and SFTP from my dev machine.</p>

<p>By the way, it also seems possible to use the Network Manager to achieve the same end. In this case, you&rsquo;d leave the config file for your network device alone, and instead run the nmtui command. Search Google for more complete instructions. You&rsquo;ll still need to bridge the connection through VMWare tho&#8217;.</p>

<p>Hope this helps somebody &hellip;</p>

<p>PS - If you can access the instance via SSH or SFTP, but cannot from a browser, you may need to either disable and stop firewalld:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>systemctl disable firewalld
</span><span class='line'>systemctl stop firewalld</span></code></pre></td></tr></table></div></figure>


<p>or better, figure out how to configure it properly to allow access via a browser.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[SSH Tunneling - ColdFusion Lockdown Technique]]></title>
    <link href="http://dnando.github.io/blog/2014/11/04/ssh-tunneling-coldfusion-lockdown-technique/"/>
    <updated>2014-11-04T14:40:42+01:00</updated>
    <id>http://dnando.github.io/blog/2014/11/04/ssh-tunneling-coldfusion-lockdown-technique</id>
    <content type="html"><![CDATA[<p>The ColdFusion and Railo Lockdown Guides recommend that access is restricted to all administrative areas of the server. This is especially important to do because many security vulnerabilities have been discovered that exploit open access to admin directories. It is fairly easy to accomplish, using a directive in the Apache configuration for example. It would look something like this on ACF:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Location /CFIDE&gt;
</span><span class='line'>  Order Deny,Allow
</span><span class='line'>  Deny from All
</span><span class='line'>&lt;/Location&gt;
</span></code></pre></td></tr></table></div></figure>


<p>or this on Railo:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Location /railo-context&gt;
</span><span class='line'>  Order Deny,Allow
</span><span class='line'>  Deny from all
</span><span class='line'>&lt;/Location&gt;</span></code></pre></td></tr></table></div></figure>


<p>So far so good, but now anyone needing to administer the server can&rsquo;t login. They will be denied access by the web server. There are various recommendations for allowing only selective access, for instance from a given fixed IP address at the office of the administrator:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Location /railo-context&gt;
</span><span class='line'>  Order Deny,Allow
</span><span class='line'>  Deny from all
</span><span class='line'>  Allow from 84.16.156.99
</span><span class='line'>&lt;/Location&gt;</span></code></pre></td></tr></table></div></figure>


<p>But what if the server administrator(s) is/are out of the office when they need access to the server? Away at a conference, at a client&rsquo;s office, or at home? And what if your office doesn&rsquo;t have a fixed IP address? Should you get one &hellip; and then have to remember to change the &ldquo;allow from&rdquo; IP address in all of your server configuration files if and when that IP address changes? For a variety of reasons, this doesn&rsquo;t seem ideal.</p>

<p>There&rsquo;s another &ldquo;small&rdquo; problem here. Best security practice dictates that all access to admin areas should be over an encrypted connection. I cannot ensure that the modem installed here in my office, or wherever else I happen to be when needing to admin my servers, a hotel for instance, is not compromised by a packet sniffer. In fact, I recently installed an update on our modem here specifically for a packet sniffing vulnerability, and I only ran across it by chance. No idea how long that remained unpatched, and I&rsquo;m simply not prepared to invest the time to learn how to monitor this sort of thing. This implies that I <em>definitely should</em> install SSL certificates and set up secure https access for all administrative areas on each server I maintain. That&rsquo;s painful.</p>

<p>Put all that together, and it helps to explain why ACF and Railo servers are often not locked down.</p>

<p>Here&rsquo;s where SSH tunneling comes to the rescue. In a nutshell, it allows you to securely browse a remote server as localhost, as if the server was under your desk and your keyboard and monitor where connected to it, even if it&rsquo;s located halfway around the world. The icing on the cake is it is very simple to set up, and the same setup will work for every server you admin!</p>

<p>To use SSH tunneling to gain access to admin areas of your server, the first step to restrict access to any admin area to only localhost, for example:</p>

<p>For ACF:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Location /CFIDE&gt;
</span><span class='line'>  Order Deny,Allow
</span><span class='line'>  Deny from All
</span><span class='line'>  Allow from localhost
</span><span class='line'>&lt;/Location&gt;
</span></code></pre></td></tr></table></div></figure>


<p>or for Railo:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;Location /railo-context&gt;
</span><span class='line'>  Order Deny,Allow
</span><span class='line'>  Deny from all
</span><span class='line'>  Allow from localhost
</span><span class='line'>&lt;/Location&gt;</span></code></pre></td></tr></table></div></figure>


<p>( While you are at it, restrict port access to only those ports you need to leave exposed, for instance 80, 443 and whatever port you are using for SSH access ).</p>

<p>There are detailed instructions for SSH tunneling all over the web if you want to find out more, but the instructions below should work fine for our purposes.</p>

<ol>
<li><p>In your web browser, configure the proxy settings to point to &ldquo;localhost&rdquo;, a free port on your local machine (we&rsquo;ll use 60001), using SOCKS5. This should work with any browser. Using Firefox as an example, here&rsquo;s how to do that:</p>

<ul>
<li>Go to Preferences</li>
<li>Click the Advanced icon</li>
<li>Click the Network tab</li>
<li>Click the Settings button, across from where it says &ldquo;Configure how Firefox connects to the Internet</li>
<li>Select Manual proxy configuration</li>
<li>In the SOCKS Host field put &ldquo;localhost&rdquo; without the quotation marks</li>
<li>In the Port field put the port number you will use, 60001 in our example</li>
<li>Select SOCKS v5</li>
<li>Click OK</li>
</ul>
</li>
<li><p>ssh into any server you admin using Terminal or Putty, etc.  Use the -D flag set to the same port as above, example: ssh -D 60001 <a href="&#x6d;&#x61;&#x69;&#x6c;&#116;&#111;&#x3a;&#117;&#x73;&#x65;&#114;&#64;&#x31;&#x30;&#x32;&#46;&#x31;&#x30;&#x33;&#x2e;&#49;&#x30;&#56;&#x2e;&#x33;&#x39;">&#117;&#x73;&#101;&#x72;&#64;&#x31;&#48;&#x32;&#46;&#49;&#x30;&#51;&#46;&#49;&#x30;&#56;&#x2e;&#51;&#x39;</a></p></li>
<li><p>You can now access admin areas of the server in this browser using localhost urls such as <a href="http://127.0.0.1/CFIDE/administrator/enter.cfm,">http://127.0.0.1/CFIDE/administrator/enter.cfm,</a> as long as you remain logged in via SSH. The connection is through an SSH &ldquo;tunnel&rdquo;, so between your local machine and the server, all traffic is encypted.</p></li>
</ol>


<p>Note that the port chosen is arbitrary. It only has to be available and match in both the -D flag and SOCKS port setting. To revert the browser to normal behavior, simply choose No Proxy in the Network Settings dialog.</p>

<p>What I usually do is leave Firefox configured in this way and reserve it only for SSH tunnelling sessions. And again, once a browser is configured with these proxy settings, you can securely browse any server as localhost by SSH&#8217;ing into it with the -D port setting.</p>

<p>Now say you have Fusion Reactor installed and want to ensure access is also restricted. Just leave your firewall configured to leave the ports Fusion Reactor uses closed, and access it, securely, via your SSH tunnel!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Rollback Yum Updates on CentOS]]></title>
    <link href="http://dnando.github.io/blog/2014/10/24/how-to-rollback-yum-updates-on-centos/"/>
    <updated>2014-10-24T16:26:50+02:00</updated>
    <id>http://dnando.github.io/blog/2014/10/24/how-to-rollback-yum-updates-on-centos</id>
    <content type="html"><![CDATA[<p>1) Open the yum config file:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /etc/yum.conf</span></code></pre></td></tr></table></div></figure>


<p>and ensure the following line is included in the config settings</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>tsflags=repackage</span></code></pre></td></tr></table></div></figure>


<p>2) Open the rpm macro file ( or create it if it doesn&rsquo;t exist ):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>vi /etc/rpm/macros</span></code></pre></td></tr></table></div></figure>


<p>And ensure the following line is included:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%_repackage_all_erasures 1</span></code></pre></td></tr></table></div></figure>


<p>Now the rollback flag can be used on the rpm command as shown in the examples below to roll back updates to any point in the past:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rpm -Uvh –rollback ’21:00′
</span><span class='line'>rpm -Uvh –rollback ’3 hours ago’
</span><span class='line'>rpm -Uvh –rollback ‘august 13′
</span><span class='line'>rpm -Uvh –rollback ‘yesterday’</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Is This Acceptable?]]></title>
    <link href="http://dnando.github.io/blog/2014/10/17/is-this-acceptable/"/>
    <updated>2014-10-17T14:09:18+02:00</updated>
    <id>http://dnando.github.io/blog/2014/10/17/is-this-acceptable</id>
    <content type="html"><![CDATA[<p>A few days ago, Adobe released <a href="http://blogs.coldfusion.com/post.cfm/updates-for-coldfusion-11-coldfusion-10-and-coldfusion-9-released">updates</a> for CF 9, 10 and 11. I&rsquo;ve been following comments raised about them since, and I&rsquo;m disturbed to see some developers struggling to get their servers patched, especially when applying the update has taken the server down. I don&rsquo;t know if these cases are isolated or might be more widespread, but I find this unacceptable.</p>

<p>I run several instances of ACF on CentOS. I&rsquo;m subscribed to the CentOS-announce Digest mailing list, as I&rsquo;m sure most CentOS server admins are. For many years now, whenever an update is released, perhaps once or twice a week, I ssh directly onto our servers, run yum update, and generally within less than a minute, the update completes. Never once has the process failed. Never once have I seen an incoming email on the CentOS mailing list that someone experienced a server crash, or any other issue for that matter, because of an update.</p>

<p>This is how ColdFusion updates <strong>should</strong> function, flawlessly.</p>

<p>In stark contrast, CF developers have become wary of applying updates. There is a risk that their server will compromised because of the security vulnerability the update is meant to patch, and there seems to be an equal if not greater risk that their server will be compromised, in one way or another, in the update process. CF 10 introduced automated updates, but as we see, the automated update process remains error prone.</p>

<p>It should not be like this. Rather than focusing on new features, the CF dev team needs to focus on getting the update process as flawless as it is on CentOS. What they seem to have lost track of is that, for a start, developers have families to support. Our clients expect us to keep their servers up and running 24/7. Our clients depend on the applications we build to run their businesses. As developers, we <em>cannot</em> afford to experiment on our clients. And yet, when Adobe releases a flawed update that takes servers down, effectively experimenting on us and our clients, <em>oh, look, they are trapped between a security vulerability and a flawed update</em>, the implicit statement received on our end is &ldquo;We don&rsquo;t care if you keep your clients. It does not matter to us at all.&rdquo; Really?</p>

<p>What is even more disturbing is the way the Adobe dev team now uses us as their QA department, as if ColdFusion server was loosely organized open source project among wannabe hackers. It is not disturbing because the CF devs are actively reaching out trying to solve problems that are occurring, asking for logs, error message screenshots, suggesting the possible need to copy and paste jar files from here to there if some functionality is broken, instructing us to manually install the updates one at a time if the automated updater doesn&rsquo;t work, etc. It is because these interchanges should never occur in the first place regarding an update. The update process needs to be flawless, as near to it as possible, so that we can rely on it. Like it is on CentOS. If they can do it, the CF dev team can do it.</p>

<p>The worst, however, is <a href="http://blogs.coldfusion.com/post.cfm/updates-for-coldfusion-11-coldfusion-10-and-coldfusion-9-released#comment-2A6D270F-CEF1-319F-EDCFF7262E950FC0">this</a>, linked for reference but replicated below, an Adobe engineer asking a developer, a paying customer, to effectively crash his server &ldquo;in off peak hours&rdquo; so that he can get at the log files that might reveal what the problem is.</p>

<blockquote><p>Hi Mark,</p><p>Of all the things connector logs with debug_level=debug are the most important one&#8217;s. Till now with all the information you have shared I can tell that there is some problem with shared memory access between worker threads. But to exactly pin point the problem I will be needing the connector logs. I understand it will be difficult for you to do something on production server but it is a must for this problem to be resolved.</p><p>If possible in off-peak hours, apply the update14 and reconfigure the connector. Once the connector is installed go to connector directory c:\coldfusion10\config\wsconfig\magicnumber\ and open isapi_redirect.properties in notepad.<br/>Edit the line &#8220;log_level= info&#8221; and change it to &#8220;log_level= debug&#8221; and save the changes. Restart IIS, hit any cfm page and wait for app pool to crash. Once it is crashed take a backup of isapi_redirect.log(created in connector directory) in some other directory like c:\connector_logs\ directory. After the backup you can revert back the changes.<br/>Lastly you have to share this backed up logs with us.</p><p>Thanks,<br/>Milan.</p></blockquote>


<p>When I say this is unacceptable, I mean that it is not acceptable for Adobe to use CF developers and their clients as their QA team, especially in that Milan says &ldquo;I understand it will be difficult for you to do something on production server but it is a <em>must</em> for this problem to be resolved.&rdquo; No, it is <strong>not</strong> a must to take down our servers, possibly endangering our client relationships, to fix your bugs.</p>

<p>Yes, this is very complex stuff. But in today&rsquo;s world, that simply means Adobe needs to employ a vastly improved QA strategy than the one they have in place today for ColdFusion releases, especially for the update process itself.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Check Digit Computation for Swiss Pay Slips]]></title>
    <link href="http://dnando.github.io/blog/2014/09/23/check-digit-computation-swiss-pay-slips/"/>
    <updated>2014-09-23T13:50:02+02:00</updated>
    <id>http://dnando.github.io/blog/2014/09/23/check-digit-computation-swiss-pay-slips</id>
    <content type="html"><![CDATA[<p>I&rsquo;m working on a business application that generates invoices and pay slips for a company in Switzerland. Instead of checks, the Swiss banking system uses a pay slip, and these have an account number, a reference number and of course the total which should be paid, all with check digits, similar to what is found on credit card numbers. At first I thought the check digit was generated by the <a href="http://en.wikipedia.org/wiki/Luhn_algorithm">Luhn algorithm</a>, for which I could find plentiful examples, even in ColdFusion, such as <a href="http://www.danvega.org/blog/2009/9/3/Using-ColdFusion-to-generate-credit-card-numbers">Dan Vega&rsquo;s post</a> explaining how to generate credit card numbers with correct check digits. The meat of his implementation is here, which expects an array, ccnumber, with the card number in it and and cclen, which is of course <code>arrayLen( ccnumber )</code></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='cfc'><span class='line'><span class="o">&lt;</span><span class="nv">cfscript</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="cm">/* the luhn Algorithm is used to create the check digit number */</span>
</span><span class='line'>  <span class="k">var</span> <span class="nv">sum</span> <span class="o">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>  <span class="k">for</span><span class="p">(</span><span class="nv">j</span><span class="o">=</span><span class="m">1</span><span class="p">;</span> <span class="nv">j</span> <span class="o">&lt;</span> <span class="nv">cclen</span><span class="p">;</span> <span class="nv">j</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">var</span> <span class="nv">digit</span> <span class="o">=</span> <span class="nv">ccnumber</span><span class="p">[</span><span class="nv">j</span><span class="p">];</span>
</span><span class='line'>      <span class="c1">// length of 16 for Visa|Mastercard|Discover &amp;&amp; length of 15 for Amex</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span> <span class="p">(</span><span class="nv">cclen</span> <span class="o">==</span> <span class="m">16</span> <span class="o">&amp;&amp;</span> <span class="nv">j</span> <span class="err">%</span> <span class="m">2</span> <span class="o">!=</span> <span class="m">0</span><span class="p">)</span> <span class="o">||</span> <span class="p">(</span><span class="nv">cclen</span> <span class="o">==</span> <span class="m">15</span> <span class="o">&amp;&amp;</span> <span class="nv">j</span> <span class="err">%</span> <span class="m">2</span> <span class="o">==</span> <span class="m">0</span><span class="p">)</span> <span class="p">){</span>
</span><span class='line'>          <span class="nv">digit</span> <span class="o">=</span> <span class="nv">digit</span> <span class="o">*</span> <span class="m">2</span><span class="p">;</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span><span class="nv">digit</span> <span class="o">&gt;</span> <span class="m">9</span><span class="p">){</span>
</span><span class='line'>              <span class="nv">digit</span> <span class="o">=</span> <span class="p">(</span> <span class="nf">left</span><span class="p">(</span><span class="nv">digit</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="o">+</span> <span class="nf">right</span><span class="p">(</span><span class="nv">digit</span><span class="p">,</span><span class="m">1</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'>          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>              <span class="nv">digit</span> <span class="o">=</span> <span class="nv">digit</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="nv">sum</span> <span class="o">+=</span> <span class="nv">digit</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">var</span> <span class="nv">check_digit</span> <span class="o">=</span> <span class="p">[</span><span class="m">0</span><span class="p">,</span><span class="m">9</span><span class="p">,</span><span class="m">8</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">5</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">1</span><span class="p">];</span>
</span><span class='line'>  <span class="nv">ccnumber</span><span class="p">[</span><span class="nv">cclen</span><span class="p">]</span> <span class="o">=</span> <span class="nv">check_digit</span><span class="p">[(</span><span class="nv">sum</span> <span class="err">%</span> <span class="m">10</span> <span class="o">+</span> <span class="m">1</span><span class="p">)];</span>
</span><span class='line'><span class="o">&lt;/</span><span class="nv">cfscript</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I was hoping I could quickly adapt the above for my use case. However, I was disappointed to learn that Swiss pay slips use a non-standard algorithm to calculculate check digits. And genuinely disheartened when I was left staring at this explanation of the algorithm, the only one that seems to be provided by the banking sector.</p>

<p><img src="http://dnando.github.io/images/CheckDigit.gif" alt="Check digit computation module 10, recursive" /></p>

<p>If you study it for a few minutes, you&rsquo;ll see how the check digit is calculated, using the chart provided. But it doesn&rsquo;t give much of a clue what algorithm should be used to generate the check digit, except in the title, which seems to suggest it might use mod 10, recursively, if you assume that it has been translated from German incorrectly, module instead of modulo or modulus.</p>

<p>After a few sessions of Googling, I found an <a href="http://delphi.cjcsoft.net/viewthread.php?tid=48934">example someone wrote in Delphi</a> that seemed to demonstate it could be tackled rather simply, with a single array representing the entire chart. Unfortunately I couldn&rsquo;t grok some of the nuances of the syntax.</p>

<p>Then I ran across <a href="http://www.hosang.ch/modulo10.aspx">another set of examples</a> variations of C and Visual Basic. His comment at the top of the page reads:</p>

<p>Haben Sie sich auch schon über die nicht sehr programmiergerechte Beschreibung in den Unterlagen der PostFinance und der Telekurs geärgert? &hellip; which my Swiss client on this project translated as &ldquo;The descriptions from PostFinance and Telekurs are shit&hellip;&rdquo; - not at all useful for programmers.</p>

<p>The VB example looked familiar enough, and after a bit of mucking around, came up with this CFML function that seems to work to generate the check digit, passing every test I&rsquo;ve thown at it from the pay slips I have laying around.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='cfc'><span class='line'><span class="o">&lt;</span><span class="nv">cfscript</span><span class="o">&gt;</span>
</span><span class='line'>  <span class="nv">public</span> <span class="k">numeric</span> <span class="k">function</span> <span class="nf">calCheckDigit</span><span class="p">(</span> <span class="k">string</span> <span class="nv">number</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">var</span> <span class="nv">arrTable</span> <span class="o">=</span> <span class="p">[</span><span class="m">0</span><span class="p">,</span><span class="m">9</span><span class="p">,</span><span class="m">4</span><span class="p">,</span><span class="m">6</span><span class="p">,</span><span class="m">8</span><span class="p">,</span><span class="m">2</span><span class="p">,</span><span class="m">7</span><span class="p">,</span><span class="m">1</span><span class="p">,</span><span class="m">3</span><span class="p">,</span><span class="m">5</span><span class="p">];</span>
</span><span class='line'>      <span class="k">var</span> <span class="nv">carry</span> <span class="o">=</span> <span class="m">0</span><span class="p">;</span>
</span><span class='line'>      <span class="k">var</span> <span class="nv">i</span> <span class="o">=</span> <span class="m">1</span><span class="p">;</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span> <span class="nv">i</span> <span class="o">=</span> <span class="m">1</span><span class="p">;</span> <span class="nv">i</span> <span class="o">&lt;=</span> <span class="k">len</span><span class="p">(</span> <span class="nv">number</span> <span class="p">);</span> <span class="nv">i</span><span class="o">++</span> <span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nv">carry</span> <span class="o">=</span> <span class="nv">arrTable</span><span class="p">[</span> <span class="p">(</span> <span class="p">(</span> <span class="nv">carry</span> <span class="o">+</span> <span class="nf">mid</span><span class="p">(</span> <span class="nv">number</span><span class="p">,</span> <span class="nv">i</span><span class="p">,</span> <span class="m">1</span> <span class="p">)</span> <span class="p">)</span> <span class="err">%</span> <span class="m">10</span> <span class="p">)</span> <span class="o">+</span> <span class="m">1</span> <span class="p">];</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="p">(</span> <span class="m">10</span> <span class="o">-</span> <span class="nv">carry</span> <span class="p">)</span> <span class="err">%</span> <span class="m">10</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'> <span class="o">&lt;/</span><span class="nv">cfscript</span><span class="o">&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you compare the VB solution with the above, you&rsquo;ll see I&rsquo;m adding 1 to each calculated index value. That&rsquo;s because ColdFusion arrays are 1-based rather than 0-based. If you happen to be using this example to build a similar function in another language that has 0 based arrays, remove the <code>+ 1</code> from line 7.</p>

<p>This function expects a string with consecutive numeric digits 0-9 only. It will blow up if any other characters are passed into it.</p>

<p>Here are some reference links for solving the more general problem of generating Swiss payment slips:</p>

<p><a href="https://www.postfinance.ch/binp/postfinance/public/dam.M26m_i6_6ceYcN2XtAN4w8OHMynQG7FKxJVK8TtQzr0.spool/content/dam/pf/de/doc/consult/manual/dlserv/inpayslip_isr_man_en.pdf">Manual ISR - Orange Inpayment Slip with reference number</a> - the clearest explanation I&rsquo;ve found regarding how the data is structured and placed on the pay slip.</p>

<p><a href="https://www.postfinance.ch/binp/postfinance/public/dam.kDeM1NfdktHxsoPgqxBgbWOwXjqUmZZMUW52ZpIhfU0.spool/content/dam/pf/de/doc/consult/manual/dldata/efin_recdescr_man_en.pdf">Record Description Electronic services</a> - the only information currently here is reproduced in the logic diagram above.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Documentation for CFScript]]></title>
    <link href="http://dnando.github.io/blog/2014/09/17/documentation-for-cfscript/"/>
    <updated>2014-09-17T12:18:16+02:00</updated>
    <id>http://dnando.github.io/blog/2014/09/17/documentation-for-cfscript</id>
    <content type="html"><![CDATA[<p>Adam Cameron posted an excellent resource yesterday that has been lacking until now, <a href="http://blog.adamcameron.me/2014/09/documentation-for-cfscript.html">Documentation for CFScript</a>. <del>A few minor areas could be enhanced, but it is, in all, quite comprehensive.</del> Update: He&rsquo;s moved the <a href="https://github.com/daccfml/cfscript/blob/master/cfscript.md">CFScript documentation</a> to GitHub, so we can all have a go at improving it. That said, it is still quite comprensive and very helpful indeed. Thanks Adam.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disabling Browser Back Button]]></title>
    <link href="http://dnando.github.io/blog/2014/09/16/disabling-browser-back-button/"/>
    <updated>2014-09-16T17:53:31+02:00</updated>
    <id>http://dnando.github.io/blog/2014/09/16/disabling-browser-back-button</id>
    <content type="html"><![CDATA[<p>I&rsquo;m working on a particular process in a web application where the user could unintentionally create duplicate content using the browser back button. Here&rsquo;s a handy way I ran across to disable the back button, or indeed handle it in any way needed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='Javascript'><span class='line'><span class="nb">window</span><span class="p">.</span><span class="nx">onload</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">history</span><span class="p">.</span><span class="nx">pushState</span> <span class="o">===</span> <span class="s2">&quot;function&quot;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="nx">history</span><span class="p">.</span><span class="nx">pushState</span><span class="p">(</span><span class="s2">&quot;jibberish&quot;</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="kc">null</span><span class="p">);</span>
</span><span class='line'>        <span class="nb">window</span><span class="p">.</span><span class="nx">onpopstate</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="nx">history</span><span class="p">.</span><span class="nx">pushState</span><span class="p">(</span><span class="s1">&#39;newjibberish&#39;</span><span class="p">,</span> <span class="kc">null</span><span class="p">,</span> <span class="kc">null</span><span class="p">);</span>
</span><span class='line'>            <span class="c1">// Handle the back (or forward) buttons here</span>
</span><span class='line'>            <span class="c1">// Will NOT handle refresh, use onbeforeunload for this.</span>
</span><span class='line'>            <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;Back button disabled. Please use navigation links instead.&#39;</span><span class="p">);</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">ignoreHashChange</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>        <span class="nb">window</span><span class="p">.</span><span class="nx">onhashchange</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">ignoreHashChange</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">ignoreHashChange</span> <span class="o">=</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>                <span class="nb">window</span><span class="p">.</span><span class="nx">location</span><span class="p">.</span><span class="nx">hash</span> <span class="o">=</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">();</span>
</span><span class='line'>                <span class="c1">// Detect and redirect change here</span>
</span><span class='line'>                <span class="c1">// Works in older FF and IE9</span>
</span><span class='line'>                <span class="c1">// * it does mess with your hash symbol (anchor?) pound sign</span>
</span><span class='line'>                <span class="c1">// delimiter on the end of the URL</span>
</span><span class='line'>                <span class="nx">alert</span><span class="p">(</span><span class="s1">&#39;Back button disabled. Please use navigation links instead.&#39;</span><span class="p">);</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>            <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>                <span class="nx">ignoreHashChange</span> <span class="o">=</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>            <span class="p">}</span>
</span><span class='line'>        <span class="p">};</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Apparently, this works with older browsers that do not support HTML5.</p>

<p>Source: <a href="http://stackoverflow.com/questions/6359327/detect-back-button-click-in-browser">http://stackoverflow.com/questions/6359327/detect-back-button-click-in-browser</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress Cheat Sheet]]></title>
    <link href="http://dnando.github.io/blog/2014/09/12/octopress-cheat-sheet/"/>
    <updated>2014-09-12T12:45:32+02:00</updated>
    <id>http://dnando.github.io/blog/2014/09/12/octopress-cheat-sheet</id>
    <content type="html"><![CDATA[<p>Here&rsquo;s my quick and dirty cheat sheet for using the Octopress blogging framework.</p>

<h3>Command Line</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake new_post["Post title here"]
</span><span class='line'>rake preview ( http://localhost:4000 )
</span><span class='line'>rake generate
</span><span class='line'>rake deploy</span></code></pre></td></tr></table></div></figure>


<h3>Markdown Syntax</h3>

<h4>Headers</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># This is an &lt;h1&gt; tag
</span><span class='line'>## This is an &lt;h2&gt; tag
</span><span class='line'>###### This is an &lt;h6&gt; tag</span></code></pre></td></tr></table></div></figure>


<h4>Emphasis</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>*This text will be italic*
</span><span class='line'>_This will also be italic_
</span><span class='line'>
</span><span class='line'>**This text will be bold**
</span><span class='line'>__This will also be bold__
</span><span class='line'>
</span><span class='line'>*You **can** combine them*</span></code></pre></td></tr></table></div></figure>


<h4>Unordered Lists</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>* Item 1
</span><span class='line'>* Item 2
</span><span class='line'>  * Item 2a
</span><span class='line'>  * Item 2b</span></code></pre></td></tr></table></div></figure>


<h4>Ordered Lists</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1. Item 1
</span><span class='line'>2. Item 2
</span><span class='line'>3. Item 3
</span><span class='line'>   * Item 3a
</span><span class='line'>   * Item 3b
</span></code></pre></td></tr></table></div></figure>


<h4>Images</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>![GitHub Logo](/images/logo.png)
</span><span class='line'>Format: ![Alt Text](url)</span></code></pre></td></tr></table></div></figure>


<h4>Links</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://github.com - automatic!
</span><span class='line'>[GitHub](http://github.com)</span></code></pre></td></tr></table></div></figure>


<h4>Inline code</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>I think you should use an
</span><span class='line'>`&lt;addr&gt;` element here instead.</span></code></pre></td></tr></table></div></figure>


<p><a href="http://dreamrunner.org/wiki/public_html/docs/Web/octopress.html">Reference Octopress Cheat Sheet</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I'm in the Dark Here]]></title>
    <link href="http://dnando.github.io/blog/2014/09/12/im-in-the-dark-here/"/>
    <updated>2014-09-12T00:33:09+02:00</updated>
    <id>http://dnando.github.io/blog/2014/09/12/im-in-the-dark-here</id>
    <content type="html"><![CDATA[<p>I was watching a <a href="http://youtu.be/Bgaw9qe7DEE?t=48m7s">video of Richard Feynman</a> some time back that inspired me in a very specific way. In it, he talks about his attitude toward not knowing things. Here&rsquo;s a quote from it:</p>

<p>&ldquo;You see, one thing is, I can live with doubt, and uncertainty, and not knowing. I think it&rsquo;s much more interesting to live not knowing than to have answers which might be wrong. I have approximate answers and possible beliefs and different degrees of certainty about different things, but I&rsquo;m not absolutely sure about anything, and there are many things I don&rsquo;t know anything about &hellip; But I don&rsquo;t have to know an answer. I&rsquo;m not frightened by not knowing things.&rdquo;</p>

<p>As a programmer, I&rsquo;m constantly confronted by a cascading, bubbling vortex of all kinds of things I don&rsquo;t know. I don&rsquo;t remember a syntax; my &ldquo;Google Foo&rdquo; is failing me and I can&rsquo;t find an answer; I&rsquo;m not sure of the best way to architect a given process; I&rsquo;m not really clear how a particular business process I&rsquo;m trying to model actually works in the real world; I&rsquo;m only familiar with certain aspects of a language or framework, and the rest lurks in the shadows of what I don&rsquo;t know. In the words of one of my favorite movie scenes &ldquo;I&rsquo;m in the dark here.&rdquo;</p>

<iframe width="853" height="480" src="//www.youtube.com/embed/WZ6p4t3StSc?rel=0" frameborder="0" allowfullscreen></iframe>


<p>Being in the dark all the time, confronting that ever changing vortex of things I don&rsquo;t know, affects me in various ways. It&rsquo;s an ongoing source of stress. One of my coping mechanisms is to shut down, distract myself, and that leaves me less productive than I could be. It also seems to impact my ability to learn. What impressed me about Feynman is that he seems both enthusiastic, and very clear-headed, about what he does not know. He seems to genuinely enjoy not knowing things, to embrace the state of not knowing. To me, that&rsquo;s a wonderful perspective to cultivate, both as a human being, but particularly as a programmer. It&rsquo;s an inner gestalt that I want to develop.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Redefining How I Learn New Technologies]]></title>
    <link href="http://dnando.github.io/blog/2014/09/11/redefining-how-i-learn-new-technologies/"/>
    <updated>2014-09-11T15:17:20+02:00</updated>
    <id>http://dnando.github.io/blog/2014/09/11/redefining-how-i-learn-new-technologies</id>
    <content type="html"><![CDATA[<p>I&rsquo;m a programmer. Learning new technologies and techniques is essential to what I do. However, I have noticed lately that learning has become burdened - burdened with time pressure, lots of time pressure; burdened with the sheer volume, diversity and complexity of all the things it seems I <em>must</em> learn to keep up, burdened with the feeling that I am falling ever further behind the hundreds of thousands of brilliant programmers that are constantly pushing our field forward, in every direction, a constantly expanding universe that includes everything from server administration to user interface design to unit / integration testing and a plethora of languages and frameworks that are used to develop web applications. Sum all that up, and to me, learning has become burdened with a fear that I simply won&rsquo;t be able to keep up.</p>

<p>The truth is that I really enjoy learning new things. I feel that&rsquo;s one of the reasons I like programming, why I was attracted to it in the first place. And you know, looking at it clearly, my fear is <em>entirely</em> justified. There is no way in the world for a working programming to keep up with the whole field. It&rsquo;s just too bloody big. And complex. So how can I deal with this situation?</p>

<p>Here is my proposal, to myself. What about taking one <em>small</em> bite at a time? What about simply enjoying the flavor, the taste of learning something new, as it is happening? On a practical basis, I don&rsquo;t have a choice. The field is waayy too big to consume in one go. But on a personal level, I <em>do</em> have a choice.</p>

<p>So this blog is my space for learning new stuff. I&rsquo;ve decided that I&rsquo;m going to redefine my attitude toward learning. Until now, it has seemed that if I&rsquo;m going to keep up, I have to gulp everything down as quickly as possible. Well, that doesn&rsquo;t work. I&rsquo;m left somewhat confused and overwhelmed, and I don&rsquo;t really learn anything, not in a way that I can practically use.</p>

<p>This blog is for taking small bites, chewing things over, and enjoying what I&rsquo;m learning.</p>

<p>Or at least when I must gulp, writing it down here may help me digest it better!</p>
]]></content>
  </entry>
  
</feed>
